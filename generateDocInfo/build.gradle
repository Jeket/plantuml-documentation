import org.gradle.internal.jvm.Jvm
import static org.gradle.internal.os.OperatingSystem.current

apply plugin: 'java'


project.description = 'Takes input .txt files generated by PlantUML (e.g. language, color, keywords, etc.) and produces ColorSamples and Keyword .rst files that can be used in documentation.'

// java source
sourceCompatibility = 1.10

repositories {
    flatDir {
        dirs 'libs'
    }
}


dependencies {

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'

    compile name: 'plantuml' 

    // https://mvnrepository.com/artifact/org.reflections/reflections
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'


    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
    testCompile name: 'plantuml'
}


ext.vendor = "Ashley Engelund"
ext.vendorId = "com.ashleycaroline"
ext.specificationVendor = vendor
ext.specificationVendorId = vendorId
ext.implementationVendor = vendor
ext.implementationVendorId = vendorId
ext.specificationTitleStart = "Ashley's PlantUML Documentation"
ext.implementationTitleStart = "AEPlantUMLDoc"

ext.rootPackage = 'com.ashleycaroline.plantuml-documentation'

ext.moduleName = rootPackage + '.' + project.getName();


jar {
    manifest {
        attributes(
                'Automatic-Module-Name': "${project.getName()}",
                "Specification-Title": "$project.name",
                "Specification-Vendor": specificationVendor,
                "Specification-Version": version,
                "Specification-Description": "$project.description",
                "Implementation-Title": "${implementationTitleStart} - $project.name",
                "Implementation-Version": version,
                "Implementation-Vendor": implementationVendor,
                "Implementation-Vendor-Id": implementationVendorId,
                "Built-By": System.getProperty('user.name'),
                'Build-Timestamp': new Date(),
                "Build-Jdk": Jvm.current(),
                'Build-OS': current(),
                "Created-By": "Gradle $project.gradle.gradleVersion",
        )
    }

    test {
        // uncomment the following to print out the class path when test task is run:
        // println(classpath.asPath)
    }    
    
}


javadoc {
    options.addBooleanOption('html5', true)
}


sphinx {

    // Change the source directory.
    sourceDirectory = "${projectDir}/docs"

    // Change the output directory.
    // outputDirectory = "${project.buildDir}/alternative-site"

    // Add environment variables.
    // environments = ['ENV_FOO': 'value1', 'ENV_BAR': 'value2']
    // env 'ENV_BAZ', 'value3'

    // Add tags.
    // tags 'tagA', 'tagB'
}
